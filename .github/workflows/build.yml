name: build
run-name: Build

permissions:
  contents: write

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Versión a publicar (ej: v1.2.3)'
        required: true
        default: 'v0.58'
      branch:
        description: 'Rama a usar (ej: master, main, dev, last...)'
        required: false
        default: 'master'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install apt dependencies
        run: sudo apt-get install -y ninja-build g++-12 python3-poetry
      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'poetry'
      - name: Cache Conan packages
        id: cache-conan
        if: ${{ github.event.ref == 'refs/heads/master' }}
        uses: actions/cache@v4
        with:
          path: ~/.conan2/p
          key: ${{ runner.os }}-conan
      - run: ci/ci.sh
      - name: Upload linux build
        uses: actions/upload-artifact@v4
        with:
          name: pkgj_cli
          path: ci/buildhost/pkgj_cli
      - name: Upload vita build
        uses: actions/upload-artifact@v4
        with:
          name: pkgj.vpk
          path: ci/build/pkgj.vpk

  publish:
    needs: build
    if: ${{ github.event_name == 'workflow_dispatch' || startsWith(github.event.ref, 'refs/tags/v') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Remove previous version
        run: |
          rm -f *.vpk
          echo -n ${{ github.event.inputs.version }} | sed 's/^v//' > version

      - uses: actions/download-artifact@v4
        with:
          name: pkgj.vpk

      - name: Move VPK to root (fallback compatible)
        run: |
          file=$(find . -name "*.vpk" -type f | head -n 1)
          if [ -f "$file" ]; then
            mv "$file" ./pkgj.vpk
          else
            echo "❌ No .vpk file was found."
            exit 1
          fi

      - uses: svenstaro/upload-release-action@v2
        with:
          file: pkgj.vpk
          release_name: "PKGJ ${{ github.event.inputs.version }}"
          prerelease: ${{ contains(github.event.inputs.version, 'beta') }}

      - name: Prepare new version
        run: |
          git config --global user.name "GitHub actions"
          git config --global user.email "actions@github.com"

          branch="${{ github.event.inputs.branch }}"
          git fetch origin $branch || true
          git checkout -B "$branch"

          mv pkgj.vpk pkgj-${{ github.event.inputs.version }}.vpk
          git add -u
          git add pkgj-${{ github.event.inputs.version }}.vpk
          git commit -m "Push ${{ github.event.inputs.version }}"

      - name: Upload new version
        if: ${{ !contains(github.event.inputs.version, 'beta') }}
        run: git push origin ${{ github.event.inputs.branch }}
